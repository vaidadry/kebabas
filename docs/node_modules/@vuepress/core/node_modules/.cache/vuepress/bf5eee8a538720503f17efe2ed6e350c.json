{"remainingRequest":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/internals/correct-is-regexp-logic.js","dependencies":[{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/internals/correct-is-regexp-logic.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpOwoKdmFyIE1BVENIID0gd2VsbEtub3duU3ltYm9sKCdtYXRjaCcpOwoKbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTUVUSE9EX05BTUUpIHsKICB2YXIgcmVnZXhwID0gLy4vOwoKICB0cnkgewogICAgJy8uLydbTUVUSE9EX05BTUVdKHJlZ2V4cCk7CiAgfSBjYXRjaCAoZXJyb3IxKSB7CiAgICB0cnkgewogICAgICByZWdleHBbTUFUQ0hdID0gZmFsc2U7CiAgICAgIHJldHVybiAnLy4vJ1tNRVRIT0RfTkFNRV0ocmVnZXhwKTsKICAgIH0gY2F0Y2ggKGVycm9yMikgewogICAgICAvKiBlbXB0eSAqLwogICAgfQogIH0KCiAgcmV0dXJuIGZhbHNlOwp9Ow=="},{"version":3,"sources":["/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/internals/correct-is-regexp-logic.js"],"names":["wellKnownSymbol","require","MATCH","module","exports","METHOD_NAME","regexp","error1","error2"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAIC,KAAK,GAAGF,eAAe,CAAC,OAAD,CAA3B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,WAAV,EAAuB;AACtC,MAAIC,MAAM,GAAG,GAAb;;AACA,MAAI;AACF,UAAMD,WAAN,EAAmBC,MAAnB;AACD,GAFD,CAEE,OAAOC,MAAP,EAAe;AACf,QAAI;AACFD,MAAAA,MAAM,CAACJ,KAAD,CAAN,GAAgB,KAAhB;AACA,aAAO,MAAMG,WAAN,EAAmBC,MAAnB,CAAP;AACD,KAHD,CAGE,OAAOE,MAAP,EAAe;AAAE;AAAa;AACjC;;AAAC,SAAO,KAAP;AACH,CAVD","sourcesContent":["var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n"]}]}