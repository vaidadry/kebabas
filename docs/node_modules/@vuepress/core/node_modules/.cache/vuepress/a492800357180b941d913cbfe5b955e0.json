{"remainingRequest":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/modules/es.array.concat.js","dependencies":[{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/modules/es.array.concat.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7Cgp2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTsKCnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWFycmF5Jyk7Cgp2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7Cgp2YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7Cgp2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7Cgp2YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5Jyk7Cgp2YXIgYXJyYXlTcGVjaWVzQ3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7Cgp2YXIgYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydCcpOwoKdmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpOwoKdmFyIFY4X1ZFUlNJT04gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24nKTsKCnZhciBJU19DT05DQVRfU1BSRUFEQUJMRSA9IHdlbGxLbm93blN5bWJvbCgnaXNDb25jYXRTcHJlYWRhYmxlJyk7CnZhciBNQVhfU0FGRV9JTlRFR0VSID0gMHgxRkZGRkZGRkZGRkZGRjsKdmFyIE1BWElNVU1fQUxMT1dFRF9JTkRFWF9FWENFRURFRCA9ICdNYXhpbXVtIGFsbG93ZWQgaW5kZXggZXhjZWVkZWQnOyAvLyBXZSBjYW4ndCB1c2UgdGhpcyBmZWF0dXJlIGRldGVjdGlvbiBpbiBWOCBzaW5jZSBpdCBjYXVzZXMKLy8gZGVvcHRpbWl6YXRpb24gYW5kIHNlcmlvdXMgcGVyZm9ybWFuY2UgZGVncmFkYXRpb24KLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzY3OQoKdmFyIElTX0NPTkNBVF9TUFJFQURBQkxFX1NVUFBPUlQgPSBWOF9WRVJTSU9OID49IDUxIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7CiAgdmFyIGFycmF5ID0gW107CiAgYXJyYXlbSVNfQ09OQ0FUX1NQUkVBREFCTEVdID0gZmFsc2U7CiAgcmV0dXJuIGFycmF5LmNvbmNhdCgpWzBdICE9PSBhcnJheTsKfSk7CnZhciBTUEVDSUVTX1NVUFBPUlQgPSBhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0KCdjb25jYXQnKTsKCnZhciBpc0NvbmNhdFNwcmVhZGFibGUgPSBmdW5jdGlvbiAoTykgewogIGlmICghaXNPYmplY3QoTykpIHJldHVybiBmYWxzZTsKICB2YXIgc3ByZWFkYWJsZSA9IE9bSVNfQ09OQ0FUX1NQUkVBREFCTEVdOwogIHJldHVybiBzcHJlYWRhYmxlICE9PSB1bmRlZmluZWQgPyAhIXNwcmVhZGFibGUgOiBpc0FycmF5KE8pOwp9OwoKdmFyIEZPUkNFRCA9ICFJU19DT05DQVRfU1BSRUFEQUJMRV9TVVBQT1JUIHx8ICFTUEVDSUVTX1NVUFBPUlQ7IC8vIGBBcnJheS5wcm90b3R5cGUuY29uY2F0YCBtZXRob2QKLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuY29uY2F0Ci8vIHdpdGggYWRkaW5nIHN1cHBvcnQgb2YgQEBpc0NvbmNhdFNwcmVhZGFibGUgYW5kIEBAc3BlY2llcwoKJCh7CiAgdGFyZ2V0OiAnQXJyYXknLAogIHByb3RvOiB0cnVlLAogIGZvcmNlZDogRk9SQ0VECn0sIHsKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYAogIGNvbmNhdDogZnVuY3Rpb24gY29uY2F0KGFyZykgewogICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTsKICAgIHZhciBBID0gYXJyYXlTcGVjaWVzQ3JlYXRlKE8sIDApOwogICAgdmFyIG4gPSAwOwogICAgdmFyIGksIGssIGxlbmd0aCwgbGVuLCBFOwoKICAgIGZvciAoaSA9IC0xLCBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgRSA9IGkgPT09IC0xID8gTyA6IGFyZ3VtZW50c1tpXTsKCiAgICAgIGlmIChpc0NvbmNhdFNwcmVhZGFibGUoRSkpIHsKICAgICAgICBsZW4gPSB0b0xlbmd0aChFLmxlbmd0aCk7CiAgICAgICAgaWYgKG4gKyBsZW4gPiBNQVhfU0FGRV9JTlRFR0VSKSB0aHJvdyBUeXBlRXJyb3IoTUFYSU1VTV9BTExPV0VEX0lOREVYX0VYQ0VFREVEKTsKCiAgICAgICAgZm9yIChrID0gMDsgayA8IGxlbjsgaysrLCBuKyspIGlmIChrIGluIEUpIGNyZWF0ZVByb3BlcnR5KEEsIG4sIEVba10pOwogICAgICB9IGVsc2UgewogICAgICAgIGlmIChuID49IE1BWF9TQUZFX0lOVEVHRVIpIHRocm93IFR5cGVFcnJvcihNQVhJTVVNX0FMTE9XRURfSU5ERVhfRVhDRUVERUQpOwogICAgICAgIGNyZWF0ZVByb3BlcnR5KEEsIG4rKywgRSk7CiAgICAgIH0KICAgIH0KCiAgICBBLmxlbmd0aCA9IG47CiAgICByZXR1cm4gQTsKICB9Cn0pOw=="},{"version":3,"sources":["/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/modules/es.array.concat.js"],"names":["$","require","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","undefined","FORCED","target","proto","forced","arg","A","n","i","k","length","len","E","arguments","TypeError"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"]}]}