{"remainingRequest":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/modules/es.string.from-code-point.js","dependencies":[{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/modules/es.string.from-code-point.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7Cgp2YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4Jyk7Cgp2YXIgZnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLXN0cmluZy1mcm9tY29kZXBvaW50IC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nCgp2YXIgJGZyb21Db2RlUG9pbnQgPSBTdHJpbmcuZnJvbUNvZGVQb2ludDsgLy8gbGVuZ3RoIHNob3VsZCBiZSAxLCBvbGQgRkYgcHJvYmxlbQoKdmFyIElOQ09SUkVDVF9MRU5HVEggPSAhISRmcm9tQ29kZVBvaW50ICYmICRmcm9tQ29kZVBvaW50Lmxlbmd0aCAhPSAxOyAvLyBgU3RyaW5nLmZyb21Db2RlUG9pbnRgIG1ldGhvZAovLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5mcm9tY29kZXBvaW50CgokKHsKICB0YXJnZXQ6ICdTdHJpbmcnLAogIHN0YXQ6IHRydWUsCiAgZm9yY2VkOiBJTkNPUlJFQ1RfTEVOR1RICn0sIHsKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYAogIGZyb21Db2RlUG9pbnQ6IGZ1bmN0aW9uIGZyb21Db2RlUG9pbnQoeCkgewogICAgdmFyIGVsZW1lbnRzID0gW107CiAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsKICAgIHZhciBpID0gMDsKICAgIHZhciBjb2RlOwoKICAgIHdoaWxlIChsZW5ndGggPiBpKSB7CiAgICAgIGNvZGUgPSArYXJndW1lbnRzW2krK107CiAgICAgIGlmICh0b0Fic29sdXRlSW5kZXgoY29kZSwgMHgxMEZGRkYpICE9PSBjb2RlKSB0aHJvdyBSYW5nZUVycm9yKGNvZGUgKyAnIGlzIG5vdCBhIHZhbGlkIGNvZGUgcG9pbnQnKTsKICAgICAgZWxlbWVudHMucHVzaChjb2RlIDwgMHgxMDAwMCA/IGZyb21DaGFyQ29kZShjb2RlKSA6IGZyb21DaGFyQ29kZSgoKGNvZGUgLT0gMHgxMDAwMCkgPj4gMTApICsgMHhEODAwLCBjb2RlICUgMHg0MDAgKyAweERDMDApKTsKICAgIH0KCiAgICByZXR1cm4gZWxlbWVudHMuam9pbignJyk7CiAgfQp9KTs="},{"version":3,"sources":["/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/modules/es.string.from-code-point.js"],"names":["$","require","toAbsoluteIndex","fromCharCode","String","$fromCodePoint","fromCodePoint","INCORRECT_LENGTH","length","target","stat","forced","x","elements","arguments","i","code","RangeError","push","join"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAIE,YAAY,GAAGC,MAAM,CAACD,YAA1B,C,CACA;;AACA,IAAIE,cAAc,GAAGD,MAAM,CAACE,aAA5B,C,CAEA;;AACA,IAAIC,gBAAgB,GAAG,CAAC,CAACF,cAAF,IAAoBA,cAAc,CAACG,MAAf,IAAyB,CAApE,C,CAEA;AACA;;AACAR,CAAC,CAAC;AAAES,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,IAAI,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAEJ;AAAxC,CAAD,EAA6D;AAC5D;AACAD,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBM,CAAvB,EAA0B;AACvC,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIL,MAAM,GAAGM,SAAS,CAACN,MAAvB;AACA,QAAIO,CAAC,GAAG,CAAR;AACA,QAAIC,IAAJ;;AACA,WAAOR,MAAM,GAAGO,CAAhB,EAAmB;AACjBC,MAAAA,IAAI,GAAG,CAACF,SAAS,CAACC,CAAC,EAAF,CAAjB;AACA,UAAIb,eAAe,CAACc,IAAD,EAAO,QAAP,CAAf,KAAoCA,IAAxC,EAA8C,MAAMC,UAAU,CAACD,IAAI,GAAG,4BAAR,CAAhB;AAC9CH,MAAAA,QAAQ,CAACK,IAAT,CAAcF,IAAI,GAAG,OAAP,GACVb,YAAY,CAACa,IAAD,CADF,GAEVb,YAAY,CAAC,CAAC,CAACa,IAAI,IAAI,OAAT,KAAqB,EAAtB,IAA4B,MAA7B,EAAqCA,IAAI,GAAG,KAAP,GAAe,MAApD,CAFhB;AAID;;AAAC,WAAOH,QAAQ,CAACM,IAAT,CAAc,EAAd,CAAP;AACH;AAf2D,CAA7D,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar fromCharCode = String.fromCharCode;\n// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\nvar INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;\n\n// `String.fromCodePoint` method\n// https://tc39.es/ecma262/#sec-string.fromcodepoint\n$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  fromCodePoint: function fromCodePoint(x) {\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n      elements.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00)\n      );\n    } return elements.join('');\n  }\n});\n"]}]}