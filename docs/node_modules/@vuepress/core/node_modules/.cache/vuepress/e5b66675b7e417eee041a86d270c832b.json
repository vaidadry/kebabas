{"remainingRequest":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/internals/collection-strong.js","dependencies":[{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/core-js/internals/collection-strong.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vaidadryzaite/vuepress-starter2/docs/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}